{"version":3,"sources":["../../app-src/util/HttpService.js"],"names":["HttpService","get","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","JSON","parse","responseText","send"],"mappings":";;;;;;AAAQ,kBAAMA,WAAN,CAAiB;;AAErBC,oBAAIC,GAAJ,EAAQ;;AAEJ;AACA,2BAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAoB;;AAEnC;AACA,8BAAMC,MAAM,IAAIC,cAAJ,EAAZ;;AAEA;AACAD,4BAAIE,IAAJ,CAAS,KAAT,EAAgBN,GAAhB;;AAEA;AACAI,4BAAIG,kBAAJ,GAAyB,MAAK;;AAE1B;AACA,gCAAGH,IAAII,UAAJ,IAAkB,CAArB,EAAuB;AACnB;AACA;AACA,oCAAGJ,IAAIK,MAAJ,IAAc,GAAjB,EAAqB;AACjBP,4CAAQQ,KAAKC,KAAL,CAAWP,IAAIQ,YAAf,CAAR;AACH,iCAFD,MAEO;AACHT,2CAAOC,IAAIQ,YAAX;AACH;AACJ;AACJ,yBAZD;AAaAR,4BAAIS,IAAJ;AACH,qBAvBM,CAAP;AAwBH;AA7BoB","file":"HttpService.js","sourcesContent":[" export class HttpService{\n\n    get(url){\n        \n        // Promise : Padrão de Projeto\n        return new Promise((resolve,reject) => {\n            \n            // XMLHttpRequest : objeto capaz de realizar requisições\n            const xhr = new XMLHttpRequest();\n\n            // Abre uma conexão com o servidor\n            xhr.open('GET', url);\n\n            // Realizar algumas configurações antes do envio\n            xhr.onreadystatechange = () =>{\n\n                //4 : requisição está concluída e a resposta está pronta\n                if(xhr.readyState == 4){\n                    //200 : código padrão que indica que a operação foi realizada \n                    //com sucesso\n                    if(xhr.status == 200){\n                        resolve(JSON.parse(xhr.responseText));\n                    } else {\n                        reject(xhr.responseText);\n                    }\n                }\n            };\n            xhr.send();\n        });\n    }       \n}"]}