{"version":3,"sources":["../../app-src/controllers/NegotiationController.js"],"names":["Negotiations","NegotiationsView","Message","MessageView","NegotiationService","DaoFactory","InvalidDateException","Negotiation","Bind","DateFormat","NegotiationController","constructor","$","document","querySelector","bind","_inputData","_inputQuantity","_inputValue","_negotiations","_msg","_service","_init","getNegotiationDao","then","dao","listAll","negotiations","forEach","negotiation","add","catch","err","text","addNegociation","event","preventDefault","_createNegociation","_clearForm","message","value","focus","data","toDate","delete","clearAll","clear","importNegotiations","getNegotiationPeriod","filter","newNegotiation","getNegotiations","some","existNegotiation","equals"],"mappings":"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","file":"NegotiationController.js","sourcesContent":["import { Negotiations } from '../domain/negotiation/Negotiations.js';\nimport { NegotiationsView } from '../ui/views/NegotiationsView.js';\nimport { Message } from '../ui/models/Message.js';\nimport { MessageView } from '../ui/views/MessageView.js';\nimport { NegotiationService } from '../domain/negotiation/NegotiationService.js';\nimport { DaoFactory } from '../util/DaoFactory.js';\nimport { InvalidDateException } from '../ui/converters/InvalidDateException.js';\nimport { Negotiation } from '../domain/negotiation/Negotiation.js';\nimport { Bind } from '../util/Bind.js';\nimport { DateFormat } from '../ui/converters/DateFormat.js';\n\nexport class NegotiationController{\n    \n    constructor(){\n\n        //informando que o querySelector vai para variável $ \n        const $ = document.querySelector.bind(document);\n        \n        this._inputData = $('#data');\n        this._inputQuantity = $('#quantidade');\n        this._inputValue = $('#valor');\n        \n        this._negotiations = new Bind(\n            new Negotiations(),\n            new NegotiationsView('#negociacao'),\n            'add','clear'\n        );\n\n        this._msg = new Bind(\n            new Message(),\n            new MessageView('#mensagemView'),\n            'text'\n        );\n\n        this._service = new NegotiationService();\n        this._init();\n    }\n    \n    _init(){\n        DaoFactory\n            .getNegotiationDao()\n            .then(dao => dao.listAll())\n            .then(negotiations => negotiations.forEach(\n                negotiation => this._negotiations.add(negotiation)))\n            .catch(err => this._msg.text = err);\n    }\n\n    addNegociation(event)\n    {\n        try {\n            //cancela a submissão do formulário (botão submit)\n            event.preventDefault();    \n\n            const negotiation = this._createNegociation();\n            \n            DaoFactory\n                .getNegotiationDao()\n                .then(dao => dao.add(negotiation))\n                .then(() => {\n                    this._negotiations.add(negotiation);\n                    this._msg.text = 'Negociação adicionada com sucesso!';\n                    this._clearForm();\n                }).catch(err => this._msg.text = err);\n            \n            \n        } catch (err) {\n            \n            if(err instanceof InvalidDateException) {\n                this._msg.text = err.message;\n            } else {\n                this._msg.text = 'Um erro não esperado aconteceu!';       \n            }\n\n        }                \n    }\n\n    _clearForm(){\n        this._inputData.value = '';\n        this._inputQuantity.value = '1';\n        this._inputValue.value = '0.0'; \n        this._inputData.focus();\n    }\n\n    _createNegociation(){\n        \n        //let data = new Date(this._inputData.value.split('-'));\n        \n        let data = DateFormat.toDate(this._inputData.value);\n\n        return new Negotiation(\n            data,\n            this._inputQuantity.value,\n            this._inputValue.value\n        );\n    }\n\n    delete(){\n        DaoFactory\n            .getNegotiationDao()\n            .then(dao => dao.clearAll())\n            .then(() => {\n                this._negotiations.clear();\n                this._msg.text = 'Negociações apagadas com sucesso!';\n        });\n    }\n    \n    importNegotiations(){\n        // Resolvendo Promises de forma paralela\n        this._service.getNegotiationPeriod().then(\n            negotiations => {\n                negotiations\n                .filter(newNegotiation => \n                    !this._negotiations.getNegotiations().some(existNegotiation =>\n                        newNegotiation.equals(existNegotiation))).forEach(negotiation => \n                            this._negotiations.add(negotiation));\n                    \n            this._msg.text = 'Negociações do período importadas com sucesso';\n\n            }).catch(err => this._msg.text = err);\n    }\n    \n    \n    /*\n    importNegotiations(){\n\n    //Resolvendo Promises de forma sequencial    \n        const negotiations = [];\n\n        // Padrão de projeto Promise\n        this._service.getNegotiationWeek().then(\n            week => {\n                negotiations.push(...week);\n                return this._service.getNegotiationLastWeek();\n            }).then(\n                last => {\n                    negotiations.push(...last);\n                    return this._service.getNegotiationLast();\n            }).then(\n                lastW => {\n                    negotiations.push(...lastW);\n                    negotiations.forEach(negotiation => this._negotiations.add(negotiation));\n                        this._msg.text = 'Negociações importadas com sucesso!';\n                }).catch(err => this._msg.text = err);\n    }*/\n}"]}