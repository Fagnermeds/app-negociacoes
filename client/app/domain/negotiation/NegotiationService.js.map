{"version":3,"sources":["../../../app-src/domain/negotiation/NegotiationService.js"],"names":["HttpService","Negotiation","NegotiationService","constructor","_http","getNegotiationWeek","get","then","dados","negotiations","map","obj","Date","data","quantidade","valor","err","Error","getNegotiationLastWeek","getNegotiationLast","getNegotiationPeriod","Promise","all","periodo","reduce","newArray","item","concat","sort","a","b","getTime","catch"],"mappings":";;;;;;AAASA,uB,sBAAAA,W;;AACAC,uB,kBAAAA,W;;;AAEF,kBAAMC,kBAAN,CAAwB;AAC3BC,8BAAa;AACT,yBAAKC,KAAL,GAAa,IAAIJ,WAAJ,EAAb;AACH;;AAEDK,qCAAoB;AAChB,2BAAO,KAAKD,KAAL,CACFE,GADE,CACE,oBADF,EAEFC,IAFE,CAEGC,SAAS;AACX,8BAAMC,eAAeD,MAAME,GAAN,CAAUC,OAAO,IAAIV,WAAJ,CACtC,IAAIW,IAAJ,CAASD,IAAIE,IAAb,CADsC,EAClBF,IAAIG,UADc,EACFH,IAAII,KADF,CAAjB,CAArB;;AAGA,+BAAON,YAAP;AAEH,qBARE,EAUCO,OAAO;AACH,8BAAM,IAAIC,KAAJ,CAAU,uCAAV,CAAN;AACH,qBAZF,CAAP;AAgBH;;AAEDC,yCAAwB;AACpB,2BAAO,KAAKd,KAAL,CAAWE,GAAX,CAAe,sBAAf,EACFC,IADE,CACIC,SAAS;AACZ,8BAAMC,eAAeD,MAAME,GAAN,CAAUC,OAAO,IAAIV,WAAJ,CACtC,IAAIW,IAAJ,CAASD,IAAIE,IAAb,CADsC,EAClBF,IAAIG,UADc,EACFH,IAAII,KADF,CAAjB,CAArB;;AAGA,+BAAON,YAAP;AACH,qBANE,EAOCO,OAAO;AACH,8BAAM,IAAIC,KAAJ,CAAU,0DAAV,CAAN;AACH,qBATF,CAAP;AAYH;;AAEDE,qCAAoB;AAChB,2BAAO,KAAKf,KAAL,CAAWE,GAAX,CAAe,uBAAf,EACFC,IADE,CACIC,SAAS;AACZ,8BAAMC,eAAeD,MAAME,GAAN,CAAUC,OAAO,IAAIV,WAAJ,CACtC,IAAIW,IAAJ,CAASD,IAAIE,IAAb,CADsC,EAClBF,IAAIG,UADc,EACFH,IAAII,KADF,CAAjB,CAArB;;AAGA,+BAAON,YAAP;AACH,qBANE,EAOCO,OAAO;AACH,8BAAM,IAAIC,KAAJ,CAAU,2DAAV,CAAN;AACH,qBATF,CAAP;AAYH;;AAEDG,uCAAsB;;AAElB,2BAAOC,QAAQC,GAAR,CAAY,CACf,KAAKjB,kBAAL,EADe,EAEf,KAAKa,sBAAL,EAFe,EAGf,KAAKC,kBAAL,EAHe,CAAZ,EAIJZ,IAJI,CAICgB,WACJA,QAAQC,MAAR,CAAe,CAACC,QAAD,EAAUC,IAAV,KAAmBD,SAASE,MAAT,CAAgBD,IAAhB,CAAlC,EAAwD,EAAxD,EACCE,IADD,CACM,CAACC,CAAD,EAAGC,CAAH,KAASA,EAAEjB,IAAF,CAAOkB,OAAP,KAAmBF,EAAEhB,IAAF,CAAOkB,OAAP,EADlC,CALG,EAOLC,KAPK,CAOChB,OAAO;AACX,8BAAM,IAAIC,KAAJ,CAAU,kDAAV,CAAN;AACH,qBATM,CAAP;AAUH;AAlE0B","file":"NegotiationService.js","sourcesContent":["import { HttpService } from '../../util/HttpService.js';\nimport { Negotiation } from './Negotiation.js';\n\nexport class NegotiationService{\n    constructor(){\n        this._http = new HttpService();\n    }\n\n    getNegotiationWeek(){\n        return this._http\n            .get('negociacoes/semana')\n            .then(dados => {\n                const negotiations = dados.map(obj => new Negotiation(\n                new Date(obj.data), obj.quantidade, obj.valor));\n\n                return negotiations;    \n                \n            }, \n            \n                err => {\n                    throw new Error('Não foi possível obter as negociações');\n                }\n                    \n                    \n            );\n    }\n\n    getNegotiationLastWeek(){\n        return this._http.get('negociacoes/anterior')\n            .then( dados => {\n                const negotiations = dados.map(obj => new Negotiation(\n                new Date(obj.data), obj.quantidade, obj.valor));\n\n                return negotiations;\n            },\n                err => {\n                    throw new Error('Não foi possível obter as negociações da semana anterior');\n                }\n\n            );\n    }\n\n    getNegotiationLast(){\n        return this._http.get('negociacoes/retrasada')\n            .then( dados => {\n                const negotiations = dados.map(obj => new Negotiation(\n                new Date(obj.data), obj.quantidade, obj.valor));\n\n                return negotiations;\n            },\n                err => {\n                    throw new Error('Não foi possível obter as negociações da semana retrasada');\n                }\n\n            );\n    }\n\n    getNegotiationPeriod(){\n        \n        return Promise.all([\n            this.getNegotiationWeek(),\n            this.getNegotiationLastWeek(),\n            this.getNegotiationLast()\n        ]).then(periodo => \n            periodo.reduce((newArray,item) => newArray.concat(item),[])\n            .sort((a,b) => b.data.getTime() - a.data.getTime())        \n        ).catch(err => {\n            throw new Error('Não foi possível obter as negociações do periodo');\n        });\n    }\n}"]}