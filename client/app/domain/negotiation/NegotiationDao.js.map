{"version":3,"sources":["../../../app-src/domain/negotiation/NegotiationDao.js"],"names":["Negotiation","NegotiationDao","constructor","connection","_connection","_store","add","negotiation","Promise","resolve","reject","request","transaction","objectStore","onsuccess","e","onerror","console","log","target","error","listAll","negotiations","cursor","openCursor","current","result","value","_data","_quantity","_value","push","continue","clearAll","clear"],"mappings":";;;;;;AAASA,uB,mCAAAA,W;;;AAEF,kBAAMC,cAAN,CAAoB;AACvBC,4BAAYC,UAAZ,EAAuB;AACnB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,aAAd;AACH;;AAEDC,oBAAIC,WAAJ,EAAgB;AACZ,2BAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,8BAAMC,UAAU,KAAKP,WAAL,CACXQ,WADW,CACC,CAAC,KAAKP,MAAN,CADD,EACgB,WADhB,EAEXQ,WAFW,CAEC,KAAKR,MAFN,EAGXC,GAHW,CAGPC,WAHO,CAAhB;;AAKAI,gCAAQG,SAAR,GAAoBC,KAAI;AACpBN;AACH,yBAFD;;AAIAE,gCAAQK,OAAR,GAAkBD,KAAI;AAClBE,oCAAQC,GAAR,CAAYH,EAAEI,MAAF,CAASC,KAArB;AACAV,mCAAO,wCAAP;AACH,yBAHD;AAIH,qBAdM,CAAP;AAeH;;AAEDW,0BAAS;AACL,2BAAO,IAAIb,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,8BAAMY,eAAe,EAArB;;AAEA,8BAAMC,SAAS,KAAKnB,WAAL,CACVQ,WADU,CACE,CAAC,KAAKP,MAAN,CADF,EACiB,WADjB,EAEVQ,WAFU,CAEE,KAAKR,MAFP,EAGVmB,UAHU,EAAf;;AAKAD,+BAAOT,SAAP,GAAmBC,KAAK;AACpB,kCAAMU,UAAUV,EAAEI,MAAF,CAASO,MAAzB;;AAEA,gCAAGD,OAAH,EAAY;AACR,sCAAMlB,cAAc,IAAIP,WAAJ,CAChByB,QAAQE,KAAR,CAAcC,KADE,EAEhBH,QAAQE,KAAR,CAAcE,SAFE,EAGhBJ,QAAQE,KAAR,CAAcG,MAHE,CAApB;;AAMAR,6CAAaS,IAAb,CAAkBxB,WAAlB;AACAkB,wCAAQO,QAAR;AACH,6BATD,MASO;AACHvB,wCAAQa,YAAR;AACH;AACJ,yBAfD;;AAiBAC,+BAAOP,OAAP,GAAiBD,KAAK;AAClBE,oCAAQC,GAAR,CAAYH,EAAEI,MAAF,CAASC,KAArB;AACAV,mCAAO,yCAAP;AACH,yBAHD;AAIH,qBA7BM,CAAP;AA8BH;;AAEDuB,2BAAU;AACN,2BAAO,IAAIzB,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAoB;AACnC,8BAAMC,UAAU,KAAKP,WAAL,CACXQ,WADW,CACC,CAAC,KAAKP,MAAN,CADD,EACgB,WADhB,EAEXQ,WAFW,CAEC,KAAKR,MAFN,EAGX6B,KAHW,EAAhB;;AAKAvB,gCAAQG,SAAR,GAAoBC,KAAK;AACrBN;AACH,yBAFD;;AAIAE,gCAAQK,OAAR,GAAkBD,KAAK;AACnBE,oCAAQC,GAAR,CAAYH,EAAEI,MAAF,CAASC,KAArB;AACAV,mCAAO,wCAAP;AACH,yBAHD;AAIH,qBAdM,CAAP;AAeH;AAzEsB","file":"NegotiationDao.js","sourcesContent":["import { Negotiation } from '../domain/negotiation/Negotiation.js';\n\nexport class NegotiationDao{\n    constructor(connection){\n        this._connection = connection;\n        this._store = 'negociacoes';\n    }\n\n    add(negotiation){\n        return new Promise((resolve, reject) => {\n            const request = this._connection\n                .transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .add(negotiation);\n            \n            request.onsuccess = e =>{\n                resolve();\n            }\n\n            request.onerror = e =>{\n                console.log(e.target.error);\n                reject('Não foi possível salvar as negociações');\n            }\n        });\n    }\n\n    listAll(){\n        return new Promise((resolve, reject) => {\n            const negotiations = [];\n\n            const cursor = this._connection\n                .transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .openCursor();\n\n            cursor.onsuccess = e => {\n                const current = e.target.result;\n\n                if(current) {\n                    const negotiation = new Negotiation(\n                        current.value._data,\n                        current.value._quantity,\n                        current.value._value\n                    );\n\n                    negotiations.push(negotiation);\n                    current.continue();\n                } else {\n                    resolve(negotiations);\n                }\n            }\n\n            cursor.onerror = e => {\n                console.log(e.target.error);\n                reject('Não foi possível listar as negociações!');\n            }\n        });\n    }\n\n    clearAll(){\n        return new Promise((resolve,reject) => {\n            const request = this._connection\n                .transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .clear();\n\n            request.onsuccess = e => {\n                resolve();\n            }\n\n            request.onerror = e => {\n                console.log(e.target.error);\n                reject('Não foi possível apagar as negociações');\n            }\n        });\n    }\n}"]}